来源：http://www.cnblogs.com/edwardlost/archive/2010/09/17/1829145.html
sed是非交互式编辑器，默认情况下是不会修改文件的，所以可以重定向或者采用i命令进行源文件的修改。默认情况下，所有的结果都会被打印到屏幕上。
sed编辑器是一行一行的处理，并将结果发送到屏幕上。一般的过程是：sed首先将当前正在出路的行保存在一个临时缓冲区中（模式空间），然后处理临时缓冲区的行，完成后把该行发送到屏幕上。sed每次处理完一行就将其从临时缓冲区中删除，然后将下一行读入，进行处理和显示。处理完输入文件的最后一行后，sed便结束运行。sed把每一行存在临时缓冲区中，对这个副本进行编辑，所以不会修改原来的文件。（直接修改内容是-i操作）
定址：决定对那些行进行修改，地址的形式可以是数据，正则表达式，或者是两者的结合。如果没有指定地址，sed将会处理所有的行。
例：只打印第三行    sed -n '3p' datafile   -n的意思是安静模式，即不输出其他的行，如果没有将会先输出其他的行，并且第三行要输出两次。
输出指定的行  sed -n '3,5p' datafile  输出了3,5行
使用正则表达式：  sed -n '/test1/,/test2/d' datafile  删除从包含test1到test2之间的行
数字和正则表达式混合使用： sed -n '/test1/,10d' datafile  删除包含test1到第10行
选项	功能
-e	进行多项编辑，即对输入行使用多条sed命令
-n	安静模式，取消默认输出
-f	后面接sed脚本文件，对指定数据文件执行sed脚本文件中的所有命令
sed命令
命令	功能
a\	在当前行后添加一行或多行。多行时除最后一行外，每行末尾需用“\”续行
c\	 用此符号后的新文本替换当前行中的文本。多行时除最后一行外，每行末尾需用"\"续行
i\	 在当前行之前插入文本。多行时除最后一行外，每行末尾需用"\"续行
d	删除行
h
把模式空间里的内容复制到暂存缓冲区
H	 把模式空间里的内容追加到暂存缓冲区
g	把暂存缓冲区里的内容复制到模式空间，覆盖原有的内容
G	把暂存缓冲区的内容追加到模式空间里，追加在原有内容的后面
p
打印该行
s	用一个字符替换另一个
g
在行内进行全局替换
6.例子：删除最后一行：sed '$d' datafile
    
sed 's#My#Your#g' datafile
#紧跟在s命令后的字符就是查找串和替换串之间的分隔符。分隔符默认为正斜杠，但可以改变。无论什么字符（换行符、反斜线除外），只要紧跟s命令，就成了新的串分隔符。
sed -e '1,10d' -e 's/My/Your/g' datafile
#选项-e用于进行多重编辑。第一重编辑删除第1-3行。第二重编辑将出现的所有My替换为Your。因为是逐行进行这两项编辑（即这两个命令都在模式空间的当前行上执行），所以编辑命令的顺序会影响结果。
sed -n '/hrwang/w me.txt' datafile
影响的行写入到文件me.txt中
sed '/hrwang/{n;s/My/Your/;}' datafile
sed使用该命令获取输入文件的下一行，并将其读入到模式缓冲区中，任何sed命令都将应用到匹配行紧接着的下一行上。
sed '1,20y/hrwang12/HRWANG^$/' datafile
该命令与UNIX/Linux中的tr命令类似，字符按照一对一的方式从左到右进行转换。例如，y/abc/ABC/将把所有小写的a转换成A，小写的b转换成B，小写的c转换成C。
#将1到20行内，所有的小写hrwang转换成大写，将1转换成^,将2转换成$。
#cat datafile
My name is hrwang.
Your name is mjfan.
hrwang is mjfan's husband.
mjfan is hrwang's wife.
  
sed -e '/hrwang/h' -e '$G' datafile
sed -e '/hrwang/H' -e '$G' datafile
#通过上面两条命令，你会发现h会把原来暂存缓冲区的内容清除，只保存最近一次执行h时保存进去的模式空间的内容。而H命令则把每次匹配hrwnag的行都追加保存在暂存缓冲区。
sed -e '/hrwang/H' -e '$g' datafile
sed -e '/hrwang/H' -e '$G' datafile
#通过上面两条命令，你会发现g把暂存缓冲区中的内容替换掉了模式空间中当前行的内容，此处即替换了最后一行。而G命令则把暂存缓冲区的内容追加到了模式空间的当前行后。此处即追加到了末尾。






